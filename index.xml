<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Zhiyong Li</title>
        <link>http://localhost:1313/</link>
        <description>Recent content on Zhiyong Li</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>Zhiyong Li</copyright>
        <lastBuildDate>Thu, 08 May 2025 19:06:23 +0800</lastBuildDate><atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>基于知识图谱的歌曲问答系统</title>
        <link>http://localhost:1313/p/%E5%9F%BA%E4%BA%8E%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1%E7%9A%84%E6%AD%8C%E6%9B%B2%E9%97%AE%E7%AD%94%E7%B3%BB%E7%BB%9F/</link>
        <pubDate>Thu, 08 May 2025 19:06:23 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%9F%BA%E4%BA%8E%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1%E7%9A%84%E6%AD%8C%E6%9B%B2%E9%97%AE%E7%AD%94%E7%B3%BB%E7%BB%9F/</guid>
        <description>&lt;h2 id=&#34;项目介绍&#34;&gt;项目介绍
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;项目地址：&lt;a class=&#34;link&#34; href=&#34;https://github.com/lizyshare/KG_Chen&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/lizyshare/KG_Chen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;本项目旨在构建陈奕迅歌曲知识图谱问答系统，回答陈奕迅歌曲的相关信息，比如歌曲的作词人、作曲人，歌曲的所属专辑及发行时间等。&lt;/li&gt;
&lt;li&gt;项目通过爬取线上数据，清理并整理为三元组格式数据，使用neo4j图数据库构建知识图谱。通过两个子项目进行问答交互，子项目1使用Cypher语句进行查询，子项目2通过本地部署大模型进行交互和查询。&lt;/li&gt;
&lt;li&gt;最终构建的知识图谱界面如下，包含130个节点（4个种类，分别为歌曲、人物、专辑和发行时间）、170个关系（5个种类，分别为歌手、作词、作曲、专辑和发行时间）。
&lt;img src=&#34;image.png&#34; alt=&#34;neo4j知识图谱界面&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;子项目介绍&#34;&gt;子项目介绍
&lt;/h2&gt;&lt;h3 id=&#34;子项目1基于cypher语句&#34;&gt;子项目1：基于Cypher语句
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;技术选型：前端使用Vue框架、bootstrap和axios，后端使用flask框架，数据库使用neo4j。&lt;/li&gt;
&lt;li&gt;项目定义了8种交互模式，通过输入语句匹配对应的模式，并到neo4j数据库中进行查询。8种模式如下：
&lt;code&gt;&#39;歌曲(.+)所属的专辑是&#39;, &#39;歌曲(.+)的歌手是&#39;, &#39;歌曲(.+)的作词人是&#39;, &#39;歌曲(.+)的作曲人是&#39;, &#39;专辑(.+)包含的歌曲有&#39;, &#39;(.+)演唱的歌曲有&#39;, &#39;(.+)作词的歌曲有&#39;, &#39;(.+)作曲的歌曲有&#39;,&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;交互界面展示如下：
&lt;img src=&#34;project1.png&#34; alt=&#34;项目1交互界面&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;子项目2基于ollama本地部署&#34;&gt;子项目2：基于ollama本地部署
&lt;/h3&gt;&lt;p&gt;&lt;em&gt;Tips：本项目首先要安装ollama,并下载大模型到本地。本项目使用的本地模式是 &lt;code&gt;deepseek-r1:7b&lt;/code&gt;。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;技术选型：前端使用streamlit框架，结合ollama的本地模型，通过设置prompt进行交互问答。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;提示词设置如下：“基于以下结构化数据，建立知识关联以回答问题：每条记录以编号、歌曲名称、关系（如歌手、作词、作曲、专辑、发行时间）和其他信息（如人物、专辑名、时间）表示。每首歌可能有不同的关联信息，如歌手、作词人、作曲人，且这些信息可能重复或多次出现。通过结构化信息，能够识别某歌曲的某角色，如“0,是但求其爱,歌手,陈奕迅”说明 《是但求其爱》的歌手是陈奕迅。你的结构化知识库是{data}。用户的问题是{info}，你需要根据知识库中的内容回答用户的问题。每次回答之前说一句：您好，我是陈奕迅歌曲问答助手。&amp;ldquo;在本项目中，{data}表示180条三元组信息。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;交互界面展示如下：
&lt;img src=&#34;project2.png&#34; alt=&#34;项目2交互界面&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;项目不足之处&#34;&gt;项目不足之处
&lt;/h2&gt;&lt;p&gt;针对歌曲知识图谱，存在多个歌手合唱一首歌曲、多个作曲人共同作曲同一首歌曲之类的情况，然而在构建三元组时并没有考虑这一情况。例如，“Fight As One”这首歌的歌手是“陈奕迅,蔡依林”，本项目将“陈奕迅,蔡依林”作为一个节点进行表示，这是该项目的不足之处，即未考虑人物之间的合作关系。项目可以进一步添加“人物-合作-人物”这一关系，使得知识图谱表达更加准确。&lt;/p&gt;
&lt;h2 id=&#34;致谢&#34;&gt;致谢
&lt;/h2&gt;&lt;p&gt;参考项目如下：&lt;a class=&#34;link&#34; href=&#34;http://openkg.cn/resource-list/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://openkg.cn/resource-list/ &lt;/a&gt;，感谢作者的开源贡献。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>大语言模型综述</title>
        <link>http://localhost:1313/p/%E5%A4%A7%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E7%BB%BC%E8%BF%B0/</link>
        <pubDate>Wed, 23 Apr 2025 20:39:33 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%A4%A7%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E7%BB%BC%E8%BF%B0/</guid>
        <description>&lt;h1 id=&#34;rag综述&#34;&gt;RAG综述
&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;论文：Retrieval-Augmented Generation for Large Language Models: A Survey&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://arxiv.org/abs/2312.10997&#34;  title=&#34;https://arxiv.org/abs/2312.10997&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;论文链接&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;rag-的发展范式&#34;&gt;RAG 的发展范式
&lt;/h2&gt;&lt;p&gt;论文中将 RAG 的发展划分为三个阶段：朴素 RAG、高级 RAG 和模块化 RAG：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/%E5%A4%A7%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E7%BB%BC%E8%BF%B0/fig1.png&#34;
	width=&#34;1151&#34;
	height=&#34;716&#34;
	srcset=&#34;http://localhost:1313/p/%E5%A4%A7%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E7%BB%BC%E8%BF%B0/fig1_hu_8b1c52be2dc45dff.png 480w, http://localhost:1313/p/%E5%A4%A7%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E7%BB%BC%E8%BF%B0/fig1_hu_512480fe08b044d0.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;RAG 三种范式&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;160&#34;
		data-flex-basis=&#34;385px&#34;
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;朴素 RAG&lt;/strong&gt;：这是最早期的方法，主要过程包括索引、检索和生成。它通过简单的 “检索 - 阅读” 框架，将外部知识引入大型语言模型。然而，这种简单的方法也有其局限性，比如在检索精度和召回率上可能不够理想，生成的回答可能存在幻觉等问题。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;高级 RAG&lt;/strong&gt; ：为克服朴素 RAG 的不足，高级 RAG 提出了多种优化策略。在检索阶段，它采用预检索和后检索策略，如使用滑动窗口方法优化索引技术，还引入查询重写、变换和扩展等方法来提高检索质量。在生成阶段，它关注于如何更好地整合检索到的信息，包括对信息进行重排序和压缩等操作。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;模块化 RAG&lt;/strong&gt; ：这是目前最先进的范式，具有更高的灵活性和适应性。它不仅继承了前两种范式的特点，还引入了新的模块和模式。例如，添加搜索模块以适应特定场景下的检索需求，或者通过改进检索器来提升检索性能。此外，模块化 RAG 还支持顺序处理和组件之间的端到端联合训练，使整个系统更加灵活和高效。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;rag-的核心技术组件&#34;&gt;RAG 的核心技术组件
&lt;/h2&gt;&lt;p&gt;RAG 框架主要由三个核心技术组件构成，即检索、生成和增强技术。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;检索技术&lt;/strong&gt; ：检索技术是 RAG 的基础，其目标是从外部知识库中找到与用户查询最相关的文档片段。这涉及到检索源的选择、检索粒度的确定、预处理以及嵌入模型的选择等多个关键问题。例如，检索源可以是文本、半结构化数据或结构化数据等；检索粒度可以从短语、句子到文档不等。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;生成技术&lt;/strong&gt; ：在检索到相关信息后，如何将其与大型语言模型结合以生成高质量的回答是生成技术的关键。这包括对检索到的内容进行调整和对大型语言模型进行微调。例如，可以通过上下文优化方法对检索到的信息进行重排序和压缩，以提高生成回答的准确性和相关性。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;增强技术&lt;/strong&gt; ：增强技术旨在通过对检索到的信息进行进一步处理和整合，来提升生成回答的质量和深度。这包括迭代检索、递归检索和自适应检索等多种方法。例如，迭代检索通过在知识库中反复搜索，为大型语言模型提供更丰富、更准确的上下文信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;rag-与微调的比较&#34;&gt;RAG 与微调的比较
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;RAG&lt;/strong&gt; 的优势在于能够实时更新知识，并且对模型的调整需求相对较低。它就像给模型配备了一本随时可以查阅的 “教科书”，使其在需要精确检索信息的任务中表现出色。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;微调&lt;/strong&gt; 则更像是让学生通过长期学习来内化知识，对模型的调整需求较高，但在某些特定场景下可以实现更深层次的模型定制和风格控制。&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>知识图谱综述</title>
        <link>http://localhost:1313/p/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1%E7%BB%BC%E8%BF%B0/</link>
        <pubDate>Wed, 23 Apr 2025 20:27:24 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1%E7%BB%BC%E8%BF%B0/</guid>
        <description>&lt;p&gt;（正在撰写中）&lt;/p&gt;
</description>
        </item>
        <item>
        <title>归档</title>
        <link>http://localhost:1313/archives/</link>
        <pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/archives/</guid>
        <description></description>
        </item>
        <item>
        <title>关于</title>
        <link>http://localhost:1313/%E5%85%B3%E4%BA%8E/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/%E5%85%B3%E4%BA%8E/</guid>
        <description>&lt;h3 id=&#34;教育背景&#34;&gt;教育背景
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;安徽理工大学&lt;/strong&gt;      硕士      人工智能     &lt;code&gt;2023.09–2026.06（预计）&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;安徽工程大学&lt;/strong&gt;      学士      物联网工程       2019.09 - 2023.06&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;研究兴趣&#34;&gt;研究兴趣
&lt;/h3&gt;&lt;p&gt;大语言模型，知识图谱&lt;/p&gt;
&lt;h3 id=&#34;论文发表&#34;&gt;论文发表
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;“Heterogeneous Graph Structure Learning for Link Prediction in Knowledge Hypergraphs”, International Journal of Machine Learning and Cybernetics（JCR 2 区，在投）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;技能&#34;&gt;技能
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;编程：Python(力扣 Hot 100), C++/C, Java, HTML/CSS/JavaScript&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;工具：VS code, Jupter Notebook, Shell, LATEX, MarkDown&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;外语：CET-6 (487, 口语合格)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;其他&#34;&gt;其他
&lt;/h3&gt;&lt;p&gt;CCF学生会员&lt;/p&gt;
</description>
        </item>
        <item>
        <title>链接</title>
        <link>http://localhost:1313/%E9%93%BE%E6%8E%A5/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/%E9%93%BE%E6%8E%A5/</guid>
        <description>&lt;p&gt;这里是和&lt;code&gt;科研&lt;/code&gt;相关的网站链接&lt;/p&gt;
</description>
        </item>
        <item>
        <title>搜索</title>
        <link>http://localhost:1313/search/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/search/</guid>
        <description></description>
        </item>
        
    </channel>
</rss>
